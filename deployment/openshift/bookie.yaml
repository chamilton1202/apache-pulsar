apiVersion: v1
kind: ConfigMap
metadata:
    name: bookie-config
data:
  PULSAR_MEM: "\" -Xms64m -Xmx256m -XX:MaxDirectMemorySize=256m\""
  dbStorage_writeCacheMaxSizeMb: "32" # Write cache size (direct memory)
  dbStorage_readAheadCacheMaxSizeMb: "32" # Read cache size (direct memory)
  zkServers: zookeeper
  statsProviderClass: org.apache.bookkeeper.stats.prometheus.PrometheusMetricsProvider
---
##
## Define the Bookie headless service
## In practice, in this case, it is only useful to have a view of
## all the bookie pods that are present
##
apiVersion: v1
kind: Service
metadata:
    name: bookkeeper
    labels:
        app: pulsar
        component: bookkeeper
spec:
    ports:
      - port: 2888
        name: server2
      - port: 3888
        name: leader-election
      - port: 3181
        name: server
    clusterIP: None
    selector:
        app: pulsar
        component: bookkeeper
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: bookkeeper
  labels:
    app: pulsar
    component: bookkeeper
spec:
  serviceName: bookkeeper
  replicas: 3
  template:
    metadata:
      labels:
        app: pulsar
        component: bookkeeper
        cluster: local
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
    spec:
      terminationGracePeriodSeconds: 0
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                        - pulsar
                    - key: "component"
                      operator: In
                      values:
                        - bookkeeper
      initContainers:
        - name: bookie-metaformat
          image: quay.io/chamilton614/pulsar:latest
          command: ["sh", "-c"]
          args:
            - >
              bin/apply-config-from-env.py conf/bookkeeper.conf &&
              bin/bookkeeper shell metaformat --nonInteractive || true;
          envFrom:
            - configMapRef:
                name: bookie-config
      containers:
        - name: bookie
          image: quay.io/chamilton614/pulsar-all:latest
          command: ["sh", "-c"]
          args:
            - >
              bin/apply-config-from-env.py conf/bookkeeper.conf &&
              bin/apply-config-from-env.py conf/pulsar_env.sh &&
              bin/pulsar bookie
          ports:
            - containerPort: 2181
              name: client
            - containerPort: 2888
              name: server2
            - containerPort: 3888
              name: leader-election
          envFrom:
            - configMapRef:
                name: bookie-config
          volumeMounts:
            - name: journal-disk
              mountPath: /pulsar/data/bookkeeper/journal
            - name: ledgers-disk
              mountPath: /pulsar/data/bookkeeper/ledgers
            - name: log-disk
              mountPath: /pulsar/logs
      initContainers:
        # The first time, initialize BK metadata in zookeeper
        # Otherwise ignore error if it's already there
        - name: bookie-metaformat
          image: quay.io/chamilton614/pulsar-all:latest
          command: ["sh", "-c"]
          args:
            - >
              bin/apply-config-from-env.py conf/bookkeeper.conf &&
              bin/bookkeeper shell metaformat --nonInteractive || true;
          envFrom:
            - configMapRef:
                name: bookie-config
  volumeClaimTemplates:
    - metadata:
        name: journal-disk
        labels:
          component: bookkeeper
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi
    - metadata:
        name: ledgers-disk
        labels:
          component: bookkeeper
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi
    - metadata:
        name: log-disk
        labels:
          component: bookkeeper
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi